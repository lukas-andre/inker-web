---
// testimonios.astro
const testimonials = [
  {
    text: '"Inker ha revolucionado la forma en que busco tatuadores! Es super fácil encontrar artistas con el estilo que me gusta y reservar una cita. ¡La app es intuitiva y me ahorró muchísimo tiempo!"',
    name: "Laura",
    role: "Cliente",
    image: "/img/testimonios/4.png",
  },
  {
    text: '"¡Inker es simplemente increíble! Encontré al tatuador perfecto en cuestión de minutos. La app es súper fácil de usar y me dio total confianza para reservar mi cita."',
    name: "Carlos",
    role: "Cliente",
    image: "/img/testimonios/5.png",
  },
  {
    text: '"Desde que uso Inker, mis clientes han aumentado considerablemente. ¡La app me ha ayudado a llegar a más personas y conseguir nuevos trabajos!"',
    name: "María",
    role: "Tatuadora",
    image: "/img/testimonios/6.png",
  },
];
---

<section
  class="bg-purple1 flex items-center justify-center px-4 py-16"
  id="testimonios"
>
  <div class="max-w-4xl mx-auto text-center">
    <h2 class="text-white font-script text-5xl mb-6">Testimonios</h2>

    <div class="flex justify-center mb-12">
      <div class="flex gap-1">
        <div class="w-2 h-2 bg-gray-500 transform rotate-45"></div>
        <div class="w-2 h-2 bg-gray-500 transform rotate-45"></div>
      </div>
    </div>

    <div class="relative">
      <button
        id="prevButton"
        class="absolute left-0 top-1/2 -translate-y-1/2 text-[#6366f1] hover:text-white transition-colors"
        aria-label="Previous testimonial"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>

      <div id="testimonialContent" class="px-12">
        <blockquote class="mb-8 h-48 flex items-center justify-center">
          <p
            class="text-white text-lg md:text-xl leading-relaxed transition-opacity duration-300"
          >
            {testimonials[0].text}
          </p>
        </blockquote>

        <div class="flex flex-col items-center">
          <div class="w-16 h-16 mb-3 overflow-hidden rounded-full">
            <img
              id="testimonialImage"
              src={testimonials[0].image}
              alt={`Foto de perfil de ${testimonials[0].name}`}
              class="w-full h-full object-cover transition-opacity duration-300"
            />
          </div>
          <div class="text-center">
            <h3
              id="testimonialName"
              class="text-white text-xl font-medium transition-opacity duration-300"
            >
              {testimonials[0].name}
            </h3>
            <p
              id="testimonialRole"
              class="text-gray-400 transition-opacity duration-300"
            >
              {testimonials[0].role}
            </p>
          </div>
        </div>
      </div>

      <button
        id="nextButton"
        class="absolute right-0 top-1/2 -translate-y-1/2 text-[#6366f1] hover:text-white transition-colors"
        aria-label="Next testimonial"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<style>
  .font-script {
    font-family: "Dancing Script", cursive;
  }
</style>

<script>
  const testimonials = [
    {
      text: '"Inker ha revolucionado la forma en que busco tatuadores! Es super fácil encontrar artistas con el estilo que me gusta y reservar una cita. ¡La app es intuitiva y me ahorró muchísimo tiempo!"',
      name: "Laura",
      role: "Cliente",
      image: "/img/testimonios/4.png",
    },
    {
      text: '"¡Inker es simplemente increíble! Encontré al tatuador perfecto en cuestión de minutos. La app es súper fácil de usar y me dio total confianza para reservar mi cita."',
      name: "Carlos",
      role: "Cliente",
      image: "/img/testimonios/5.png",
    },
    {
      text: '"Desde que uso Inker, mis clientes han aumentado considerablemente. ¡La app me ha ayudado a llegar a más personas y conseguir nuevos trabajos!"',
      name: "María",
      role: "Tatuadora",
      image: "/img/testimonios/6.png",
    },
  ];

  let currentIndex = 0;
  let isTransitioning = false;

  function updateTestimonial() {
    const testimonial = testimonials[currentIndex];

    if (!document) return;
    if (!testimonial) return;

    const testimonialContent = document.querySelector("#testimonialContent p");
    const testimonialImage = document.querySelector("#testimonialImage");
    const testimonialName = document.querySelector("#testimonialName");
    const testimonialRole = document.querySelector("#testimonialRole");

    if (testimonialContent) {
      testimonialContent.classList.add("opacity-0");
      setTimeout(() => {
        testimonialContent.textContent = testimonial.text;
        testimonialContent.classList.remove("opacity-0");
      }, 300);
    }

    if (testimonialImage) {
      testimonialImage.classList.add("opacity-0");
      setTimeout(() => {
        // @ts-expect-error Property 'src' does not exist on type 'Element'.
        testimonialImage.src = testimonial.image;
        // @ts-expect-error Property 'alt' does not exist on type 'Element'.
        testimonialImage.alt = `Foto de perfil de ${testimonial.name}`;
        testimonialImage.classList.remove("opacity-0");
      }, 300);
    }

    if (testimonialName) {
      testimonialName.classList.add("opacity-0");
      setTimeout(() => {
        testimonialName.textContent = testimonial.name;
        testimonialName.classList.remove("opacity-0");
      }, 300);
    }

    if (testimonialRole) {
      testimonialRole.classList.add("opacity-0");
      setTimeout(() => {
        testimonialRole.textContent = testimonial.role;
        testimonialRole.classList.remove("opacity-0");
      }, 300);
    }

    isTransitioning = true;
    setTimeout(() => {
      isTransitioning = false;
    }, 600);
  }

  function prevTestimonial() {
    if (isTransitioning) return;
    currentIndex =
      (currentIndex - 1 + testimonials.length) % testimonials.length;
    updateTestimonial();
  }

  function nextTestimonial() {
    if (isTransitioning) return;
    currentIndex = (currentIndex + 1) % testimonials.length;
    updateTestimonial();
  }

  const prevButton = document.querySelector("#prevButton");
  const nextButton = document.querySelector("#nextButton");

  if (prevButton) {
    prevButton.addEventListener("click", prevTestimonial);
  }

  if (nextButton) {
    nextButton.addEventListener("click", nextTestimonial);
  }
</script>
